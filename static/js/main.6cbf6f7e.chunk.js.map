{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","handleBtnClick","alert","state","fullname","age","handleChange","event","name","target","value","newState","setState","className","src","logo","alt","type","onChange","this","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAe,MAA0B,iC,eCkI1BA,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,eAAiB,WACfC,MAAM,GAAD,OAAI,EAAKC,MAAMC,SAAf,YAA2B,EAAKD,MAAME,OAR1B,EAUnBC,aAAe,SAACC,GAAgD,IACtDC,EAASD,EAAME,OAAfD,KACAE,EAAUH,EAAME,OAAhBC,MACFC,EAAQ,eAAQ,EAAKR,OAC3BQ,EAASH,GAAQE,EACjB,EAAKE,SAASD,IAbd,EAAKR,MAAQ,CACXC,SAAU,GACVC,IAAK,IAJU,E,0CAiBnB,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,iCACE,6CACA,uBACEC,KAAK,OACLT,KAAK,WACLU,SAAUC,KAAKb,eAEjB,uCACA,uBACEW,KAAK,OACLT,KAAK,MACLU,SAAUC,KAAKb,kBAGnB,wBAAQc,QAASD,KAAKlB,eAAtB,2B,GArCQoB,IAAMC,WCxETC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6cbf6f7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n//code week 7\n//interface IData {\n//  id: string;\n//  name: string;\n//  email: string;\n//}\n\n//interface IAppState {\n//  showTable: boolean;\n// }\n\n// interface IAppProps {\n//  data: IData[]\n//}\n\n//class App extends React.Component<IAppProps, IAppState> {\n//  constructor(props: IAppProps) {\n//    super(props);\n//    this.state = {\n//      showTable: true,\n//    }\n//  }\n//  componentDidMount() {\n//    alert(\"did mount App component !\")\n//  }\n//  componentWillUnmount() {\n//    alert(\"unmounting App component !\")\n//  }\n//  componentDidUpdate() {\n//    alert(\"did update called !\")\n//  }\n//  public toggleShowTable = () => {\n//    const { showTable } = this.state;\n//    this.setState({showTable: !showTable});\n//  }\n//  public renderRow = () => {\n//    return this.props.data.map((item) => {\n//      return (\n//        <tr>\n//          <td>{item.id}</td>\n//          <td>{item.name}</td>\n//          <td>{item.email}</td>\n//        </tr>\n//      )\n//    })\n//  }\n//  public renderTable = () => {\n//    if (this.state.showTable) {\n//      return (\n//        <table className=\"table\">\n//          <thead>\n//              <tr>\n//              <td>id</td>\n//              <td>name</td>\n//              <td>email</td>\n//            </tr>\n//          </thead>\n//          <tbody>\n//            {this.renderRow()}\n//          </tbody>\n//        </table>\n//      )\n//    }\n//  }\n//  public render() {\n//    return (\n//      <div className=\"App\">\n//        <header className=\"App-header\">\n//          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//          {this.renderTable()}\n//          <button onClick={this.toggleShowTable}>test</button>\n//        </header>\n//      </div>\n//    )\n//  }\n//}\n\n//code week8\ninterface IAppState {\n  fullname: string;\n  age: string;\n}\nclass App extends React.Component<{}, IAppState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: '',\n      age: '',\n    }\n  }\n  handleBtnClick = () => {\n    alert(`${this.state.fullname} ${this.state.age}`)\n  }\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    const { value } = event.target;\n    const newState = { ...this.state };\n    newState[name] = value;\n    this.setState(newState);\n  }\n  public render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          <form>\n            <p>Full Name : </p>\n            <input\n              type='text'\n              name='fullname'\n              onChange={this.handleChange}\n            />\n            <p>Age : </p>\n            <input\n              type='text'\n              name='age'\n              onChange={this.handleChange}\n            />\n          </form>\n          <button onClick={this.handleBtnClick}>save</button>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//const dataDummy = [\n//  {\n//    id: \"1\",\n//    name: \"Bambang\",\n//    email: \"bambang@gmail.com\"\n//  },\n//  {\n//    id: \"2\",\n//    name: \"Budi\",\n//    email: \"budi@yahoo.co.id\"\n//  },\n//]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}