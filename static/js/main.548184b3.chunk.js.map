{"version":3,"sources":["interface/index.ts","container/index.tsx","service/index.ts","container/usersPage.tsx","constants/index.ts","container/usersConfigPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ECREDIT_CARD_TYPE","BigWrapper","props","toggleSidebar","setState","showSidebar","state","contentClick","renderChildren","children","this","Sidebar","Pushable","as","Segment","className","Menu","animation","icon","inverted","vertical","visible","width","Item","Icon","name","Pusher","dimmed","onClick","Container","Dropdown","item","simple","text","React","PureComponent","APIService","method","doc","body","id","Promise","resolve","reject","url","fetch","JSON","stringify","headers","then","res","json","catch","err","UsersPage","renderUsers","users","map","user","Table","Row","Cell","first_name","last_name","email","city","street_address","isLoading","request","console","log","finally","loading","Header","Button","color","Link","to","celled","HeaderCell","Body","GENDER_OPT","key","value","CREDIT_CARD_TYPE","AMERICAN_EXPRESS","DINERS_CLUB","VISA","JCB","UsersConfigPage","handleChange","e","target","newForm","handleSelectionChange","data","handleSubmit","alert","phone_number","gender","credit_card_type","credit_card_no","size","Form","Field","placeholder","onChange","type","Select","options","App","exact","path","render","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","component","document","getElementById"],"mappings":"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","file":"static/js/main.548184b3.chunk.js","sourcesContent":["export type HTTPMethod = 'POST' | 'GET' | 'PUT' | 'DELETE';\r\n\r\nexport interface IGETUsersResponse {\r\n    first_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    phone_number: string;\r\n    id: string;\r\n    gender: string;\r\n    street_address: string;\r\n    city: string;\r\n    credit_card_no: string;\r\n    credit_card_type: string;\r\n}\r\n\r\nexport type TGENDER = 'male' | 'female';\r\n\r\nexport enum ECREDIT_CARD_TYPE {\r\n    AMERICAN_EXPRESS = 'americanexpress',\r\n    VISA = 'visa',\r\n    JCB = 'jcb',\r\n    DINERS_CLUB = 'diners-club-carte-blanche',\r\n}","import React from 'react';\r\nimport { Icon, Container, Menu, Segment, Sidebar, Dropdown } from 'semantic-ui-react';\r\n\r\ninterface IAppState {\r\n  showSidebar: boolean;\r\n}\r\n\r\nclass BigWrapper extends React.PureComponent<{}, IAppState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSidebar: false,\r\n    }\r\n  }\r\n\r\n  public toggleSidebar = () => {\r\n    this.setState({showSidebar: !this.state.showSidebar });\r\n  }\r\n\r\n  public contentClick = () => {\r\n    if (this.state.showSidebar) {\r\n      this.setState({showSidebar: !this.state.showSidebar });\r\n    }\r\n  }\r\n  public renderChildren = () => {\r\n    return (\r\n      this.props.children\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const { showSidebar } = this.state;\r\n    return (\r\n      <Sidebar.Pushable as={Segment} className=\"app-wrapper\">\r\n        <Sidebar\r\n          as={Menu}\r\n          animation='overlay'\r\n          icon='labeled'\r\n          inverted\r\n          vertical\r\n          visible={showSidebar}\r\n          width='thin'\r\n        >\r\n          <Menu.Item as='a'>\r\n            <Icon name='home' />\r\n            Home\r\n          </Menu.Item>\r\n          <Menu.Item as='a'>\r\n            <Icon name='gamepad' />\r\n            Games\r\n          </Menu.Item>\r\n          <Menu.Item as='a'>\r\n            <Icon name='camera' />\r\n            Channels\r\n          </Menu.Item>\r\n        </Sidebar>\r\n\r\n        <Sidebar.Pusher\r\n          dimmed={showSidebar}\r\n          onClick={this.contentClick}\r\n        >\r\n          <Menu className=\"navbar\">\r\n            <Container className=\"navbar-top\">\r\n              <Menu.Item onClick={this.toggleSidebar}>\r\n                <Icon name=\"bars\" />\r\n              </Menu.Item>\r\n              <Dropdown\r\n                item\r\n                simple\r\n                text={'menu dropdown'}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    icon=\"settings\"\r\n                    text=\"settings\"\r\n                  />\r\n                  <Dropdown.Item icon=\"sign out\" text=\"Sign out\"/>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Container>\r\n          </Menu>\r\n          <Container>\r\n            {this.renderChildren()}\r\n          </Container>\r\n        </Sidebar.Pusher>\r\n      </Sidebar.Pushable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BigWrapper;","import {HTTPMethod} from '../interface';\r\n\r\nconst BASE_URL = 'https://my-json-server.typicode.com/abiyogaaron/teaching-react-app/'\r\n\r\nclass APIService {\r\n    public static request<Body>(method: HTTPMethod, doc: string, body?: Body, id?: string){\r\n        return new Promise ((resolve, reject) => {\r\n            let url = `${BASE_URL}/${doc}`;\r\n            if (id){\r\n                url = `${url}/${id}`;\r\n            }\r\n            fetch(url, {\r\n                method: method,\r\n                body: JSON.stringify(body),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            }).then(res => {\r\n                if (res) {\r\n                    resolve(res.json())\r\n                }\r\n            }).catch(err => {\r\n                reject(err);\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default APIService;","import React from 'react';\r\nimport { Table, Segment, Header, Button } from 'semantic-ui-react';\r\nimport APIService from '../service';\r\nimport { IGETUsersResponse } from '../interface';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IUsersPageState {\r\n  users: any;\r\n  isLoading: boolean;\r\n}\r\n\r\nclass UsersPage extends React.PureComponent<{}, IUsersPageState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      users: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true})\r\n    APIService.request('GET', 'users')\r\n      .then(res => {\r\n        this.setState({users: res})\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({isLoading: false})\r\n      })\r\n  }\r\n\r\n  public renderUsers = () => {\r\n    const { users } = this.state;\r\n    return users.map((user: IGETUsersResponse) => {\r\n      return (\r\n        <Table.Row key={user.id}>\r\n          <Table.Cell>\r\n            {user.id}\r\n          </Table.Cell>\r\n          <Table.Cell>\r\n            {`${user.first_name} ${user.last_name}`}\r\n          </Table.Cell>\r\n          <Table.Cell>\r\n            {`${user.email}`}\r\n          </Table.Cell>\r\n          <Table.Cell>\r\n            {`${user.city} ${user.street_address}`}\r\n          </Table.Cell>\r\n        </Table.Row>\r\n      )\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <Segment loading={isLoading}>\r\n        <Header as='h3'>Application Content</Header>\r\n        <Button color=\"teal\" as={Link} to=\"/swanny-repo-app/new\">\r\n          New Users\r\n        </Button>\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Id</Table.HeaderCell>\r\n              <Table.HeaderCell>Full name</Table.HeaderCell>\r\n              <Table.HeaderCell>Email</Table.HeaderCell>\r\n              <Table.HeaderCell>Address</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.renderUsers()}\r\n          </Table.Body>\r\n        </Table>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersPage;","import { ECREDIT_CARD_TYPE } from '../interface';\r\n\r\nexport const GENDER_OPT = [\r\n  {\r\n    key: \"male\",\r\n    value: \"male\",\r\n    text: 'Male'\r\n  },\r\n  {\r\n    key: \"female\",\r\n    value: \"female\",\r\n    text: \"Female\",\r\n  }\r\n];\r\n\r\nexport const CREDIT_CARD_TYPE = [\r\n  {\r\n    key: ECREDIT_CARD_TYPE.AMERICAN_EXPRESS,\r\n    value: ECREDIT_CARD_TYPE.AMERICAN_EXPRESS,\r\n    text: 'American Express'\r\n  },\r\n  {\r\n    key: ECREDIT_CARD_TYPE.DINERS_CLUB,\r\n    value: ECREDIT_CARD_TYPE.DINERS_CLUB,\r\n    text: 'Diners Club Carte Blanche'\r\n  },\r\n  {\r\n    key: ECREDIT_CARD_TYPE.VISA,\r\n    value: ECREDIT_CARD_TYPE.VISA,\r\n    text: 'Visa'\r\n  },\r\n  {\r\n    key: ECREDIT_CARD_TYPE.JCB,\r\n    value: ECREDIT_CARD_TYPE.JCB,\r\n    text: 'JCB'\r\n  },\r\n]\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Segment, Header, Form, Button, Select, DropdownProps } from 'semantic-ui-react';\r\nimport { GENDER_OPT, CREDIT_CARD_TYPE } from '../constants';\r\nimport { TGENDER, ECREDIT_CARD_TYPE } from '../interface';\r\nimport APIService from '../service';\r\n\r\ninterface IUsersConfigPageProps extends RouteComponentProps {\r\n\r\n}\r\n\r\ninterface IUsersConfigPageState {\r\n  isLoading: boolean;\r\n  users: {\r\n    first_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    phone_number: string;\r\n    gender: TGENDER;\r\n    city: string;\r\n    street_address: string;\r\n    credit_card_type: ECREDIT_CARD_TYPE;\r\n    credit_card_no: string;\r\n  }\r\n}\r\n\r\nclass UsersConfigPage extends React.PureComponent<IUsersConfigPageProps, IUsersConfigPageState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      users: {\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        phone_number: '',\r\n        gender: 'male',\r\n        city: '',\r\n        street_address: '',\r\n        credit_card_type: ECREDIT_CARD_TYPE.AMERICAN_EXPRESS,\r\n        credit_card_no: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  public handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    const newForm = { ...this.state.users };\r\n    newForm[name] = value;\r\n\r\n    this.setState({users: newForm });\r\n  };\r\n\r\n  public handleSelectionChange = (e: React.SyntheticEvent<HTMLElement>, data: DropdownProps) => {\r\n    const { name, value } = data;\r\n    const newForm = { ...this.state.users };\r\n    newForm[name] = value;\r\n\r\n    this.setState({users: newForm });\r\n  };\r\n\r\n  public handleSubmit = () => {\r\n    this.setState({isLoading: true})\r\n    APIService.request('POST', 'users', this.state.users)\r\n      .then(res => {\r\n        if (res) {\r\n          alert(\"new user succesfully added !\")\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({isLoading: false})\r\n      })\r\n  }\r\n\r\n  public render() {\r\n    const { isLoading, users } = this.state;\r\n    return (\r\n      <Segment loading={isLoading} size=\"small\">\r\n        <Header as='h3'>New Users</Header>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>First Name</label>\r\n            <input \r\n              placeholder='Your First Name'\r\n              name=\"first_name\"\r\n              value={users.first_name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Last Name</label>\r\n            <input \r\n              placeholder='Your Last Name'\r\n              name=\"last_name\"\r\n              value={users.last_name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <input \r\n              placeholder='Your Email'\r\n              type=\"email\" name=\"email\"\r\n              value={users.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Phone Number</label>\r\n            <input \r\n              placeholder='Your Phone number'\r\n              type=\"text\" name=\"phone_number\"\r\n              value={users.phone_number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Gender</label>\r\n            <Select\r\n              placeholder=\"select your gender\"\r\n              options={GENDER_OPT}\r\n              name=\"gender\"\r\n              value={users.gender}\r\n              onChange={this.handleSelectionChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Credit Card Type</label>\r\n            <Select \r\n              placeholder=\"select your credit card type\" \r\n              options={CREDIT_CARD_TYPE}\r\n              name=\"credit_card_type\"\r\n              value={users.credit_card_type}\r\n              onChange={this.handleSelectionChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Credit Card No</label>\r\n            <input\r\n              placeholder='your credit card number'\r\n              type=\"text\"\r\n              name=\"credit_card_no\"\r\n              value={users.credit_card_no}\r\n              onChange={this.handleChange} \r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>City</label>\r\n            <input \r\n              placeholder='Your City'\r\n              type=\"text\"\r\n              name=\"city\"\r\n              value={users.city}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Address</label>\r\n            <input\r\n              placeholder='Your Address'\r\n              type=\"text\"\r\n              name=\"street_address\"\r\n              value={users.street_address}\r\n              onChange={this.handleChange}\r\n              />\r\n          </Form.Field>\r\n          <Button type='submit' color=\"teal\" onClick={this.handleSubmit}>Submit</Button>\r\n        </Form>\r\n      </Segment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UsersConfigPage;","import React from 'react';\nimport { Route, Switch, RouteComponentProps } from 'react-router-dom';\nimport BigWrapper from './container';\nimport UsersPage from './container/usersPage';\nimport UsersConfigPage from './container/usersConfigPage';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nclass App extends React.Component<RouteComponentProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <Switch>\n        <Route \n          exact\n          path={'/swanny-repo-app/'}\n          render={() => (\n            <BigWrapper {...this.props}>\n              <UsersPage />\n            </BigWrapper>\n          )}\n        />\n        <Route \n          exact\n          path={'/swanny-repo-app/new'}\n          render={() => (\n            <BigWrapper {...this.props}>\n              <UsersConfigPage {...this.props} />\n            </BigWrapper>\n          )}\n        />\n      </Switch>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}