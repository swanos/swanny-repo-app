{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","timer","setTimer","isActive","setIsActive","increment","useRef","handleStart","current","setInterval","handlePause","clearInterval","handleResume","handleReset","className","centiSeconds","slice","seconds","Math","floor","minutes","formatTime","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA2EeA,EAvEH,WAAO,IAAD,EACUC,mBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,oBAAS,GAFzB,mBAETG,EAFS,KAECC,EAFD,KAGVC,EAAiBC,iBAAO,MAExBC,EAAc,WAClBH,GAAY,GACZC,EAAUG,QAAUC,aAAY,WAC9BP,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,KAGCS,EAAc,WAClBN,GAAY,GACZO,cAAcN,EAAUG,UAGpBI,EAAe,WACnBR,GAAY,GACZC,EAAUG,QAAUC,aAAY,WAC9BP,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,KAGCY,EAAc,WAClBF,cAAcN,EAAUG,SACxBJ,GAAY,GACZF,EAAS,IA+BX,OACE,qBAAKY,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,uBACA,qBAAKA,UAAU,oBAAf,SAhCa,WACjB,IAAMC,EAAe,WAAKd,EAAQ,KAAOe,OAAO,GAC1CC,EAAU,WAAIC,KAAKC,MAAMlB,EAAQ,KAAO,IAAKe,OAAO,GACpDI,EAAU,WAAIF,KAAKC,MAAMlB,EAAQ,KAAQ,IAAKe,OAAO,GAE3D,MAAM,GAAN,OAAUI,EAAV,cAAuBH,EAAvB,cAAoCF,GA4B7BM,KAxBFlB,GAAsB,IAAVF,GAILE,GAAYF,EAAQ,EAE5B,qCACE,wBAAQqB,QAASV,EAAjB,oBACA,wBAAQU,QAAST,EAAjB,sBAKJ,mCACE,wBAAQS,QAASZ,EAAjB,qBAZA,wBAAQY,QAASf,EAAjB,yBC/BOgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e135bc17.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const increment: any = useRef(null);\n\n  const handleStart = () => {\n    setIsActive(true)\n    increment.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 10)\n  }\n\n  const handlePause = () => {\n    setIsActive(false)\n    clearInterval(increment.current)\n  }\n\n  const handleResume = () => {\n    setIsActive(true);\n    increment.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 10)\n  }\n\n  const handleReset = () => {\n    clearInterval(increment.current);\n    setIsActive(false);\n    setTimer(0);\n  }\n\n  const formatTime = () => {\n    const centiSeconds = `0${(timer % 100)}`.slice(-2)\n    const seconds = `0${Math.floor(timer / 100) % 60}`.slice(-2)\n    const minutes = `0${Math.floor(timer / 6000) % 60}`.slice(-2)\n\n    return `${minutes} : ${seconds} : ${centiSeconds}`\n  }\n\n  const renderingBtn = () => {\n    if (!isActive && timer === 0) {\n      return (\n        <button onClick={handleStart}>Start</button>\n      )\n    } else if (!isActive && timer > 0) {\n      return (\n        <>\n          <button onClick={handleResume}>Resume</button>\n          <button onClick={handleReset}>Reset</button>\n        </>\n      )\n    }\n    return (\n      <>\n        <button onClick={handlePause}>Pause</button>\n      </>\n    )\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"Stopwatch\">\n        <div className=\"Stopwatch-header\">Stopwatch</div>\n        <div className=\"Stopwatch-display\">\n          {formatTime()}\n        </div> \n        {renderingBtn()}\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//const dataDummy = [\n//  {\n//    id: \"1\",\n//    name: \"Bambang\",\n//    email: \"bambang@gmail.com\"\n//  },\n//  {\n//    id: \"2\",\n//    name: \"Budi\",\n//    email: \"budi@yahoo.co.id\"\n//  },\n//]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}