{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","toggleSidebar","setState","showSidebar","state","contentClick","this","Sidebar","Pushable","as","Segment","className","Menu","animation","icon","inverted","vertical","visible","width","Item","Icon","name","Pusher","dimmed","onClick","Container","Dropdown","item","simple","text","DropdownMenu","Header","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VA2FeA,E,kDAjFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMDC,cAAgB,WACrB,EAAKC,SAAS,CAACC,aAAc,EAAKC,MAAMD,eARvB,EAWZE,aAAe,WAChB,EAAKD,MAAMD,aACb,EAAKD,SAAS,CAACC,aAAc,EAAKC,MAAMD,eAX1C,EAAKC,MAAQ,CACXD,aAAc,GAHC,E,0CAiBnB,WAAiB,IACRA,EAAeG,KAAKF,MAApBD,YACP,OACE,eAACI,EAAA,EAAQC,SAAT,CAAkBC,GAAIC,IAASC,UAAU,cAAzC,UACE,eAACJ,EAAA,EAAD,CACEE,GAAIG,IACJC,UAAU,UACVC,KAAK,UACLC,UAAQ,EACRC,UAAQ,EACRC,QAASd,EACTe,MAAM,OAPR,UASE,eAACN,EAAA,EAAKO,KAAN,CAAWV,GAAG,IAAd,UACE,cAACW,EAAA,EAAD,CAAMC,KAAK,SADb,UAIA,eAACT,EAAA,EAAKO,KAAN,CAAWV,GAAG,IAAd,UACE,cAACW,EAAA,EAAD,CAAMC,KAAK,YADb,WAIA,eAACT,EAAA,EAAKO,KAAN,CAAWV,GAAG,IAAd,UACE,cAACW,EAAA,EAAD,CAAMC,KAAK,WADb,iBAKF,eAACd,EAAA,EAAQe,OAAT,CACEC,OAAQpB,EACRqB,QAASlB,KAAKD,aAFhB,UAIE,cAACO,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACc,EAAA,EAAD,CAAWd,UAAU,aAArB,UACE,cAACC,EAAA,EAAKO,KAAN,CAAWK,QAASlB,KAAKL,cAAzB,SACE,cAACmB,EAAA,EAAD,CAAMC,KAAK,WAEb,cAACK,EAAA,EAAD,CACEC,MAAI,EACJC,QAAM,EACNC,KAAM,gBAHR,SAKE,eAACC,EAAA,EAAD,WACE,cAACJ,EAAA,EAASP,KAAV,CACEL,KAAK,WACLe,KAAK,aAEP,cAACH,EAAA,EAASP,KAAV,CACEL,KAAK,WACLe,KAAK,uBAMf,cAACJ,EAAA,EAAD,UACE,cAACf,EAAA,EAAD,UACE,cAACqB,EAAA,EAAD,CAAQtB,GAAG,KAAX,+C,GAzEIuB,IAAMC,WCKTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b571ffba.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Header, Icon, Container, Menu, Segment, Sidebar, Dropdown, DropdownMenu } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\ninterface IAppState {\n  showSidebar : boolean;\n}\n\nclass App extends React.Component<{}, IAppState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSidebar : false,\n    }\n  }\n\n  public toggleSidebar = () => {\n    this.setState({showSidebar: !this.state.showSidebar});\n  }\n\n  public contentClick = () => {\n    if (this.state.showSidebar) {\n      this.setState({showSidebar: !this.state.showSidebar});\n    }\n  }\n\n  public render() {\n    const {showSidebar} = this.state;\n    return (\n      <Sidebar.Pushable as={Segment} className=\"app-wrapper\">\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          vertical\n          visible={showSidebar}\n          width=\"thin\"\n        >\n          <Menu.Item as='a'>\n            <Icon name=\"home\" />\n            Home\n          </Menu.Item>\n          <Menu.Item as='a'>\n            <Icon name=\"gamepad\" />\n            Games\n          </Menu.Item>\n          <Menu.Item as='a'>\n            <Icon name=\"camera\" />\n            Channels\n          </Menu.Item>\n        </Sidebar>\n        <Sidebar.Pusher\n          dimmed={showSidebar}\n          onClick={this.contentClick}\n        >\n          <Menu className=\"navbar\">\n            <Container className=\"navbar-top\">\n              <Menu.Item onClick={this.toggleSidebar}>\n                <Icon name=\"bars\" />\n              </Menu.Item>\n              <Dropdown\n                item\n                simple\n                text={\"menu dropdown\"}\n              >\n                <DropdownMenu>\n                  <Dropdown.Item\n                    icon=\"settings\"\n                    text=\"settings\"\n                  />\n                  <Dropdown.Item\n                    icon=\"sign out\"\n                    text=\"sign out\"\n                  />\n                </DropdownMenu>\n              </Dropdown>\n            </Container>\n          </Menu>\n          <Container>\n            <Segment>\n              <Header as=\"h3\">Application Content</Header>\n            </Segment>\n          </Container>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    )\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}